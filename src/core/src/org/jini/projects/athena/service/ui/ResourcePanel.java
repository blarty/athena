/*
 * ResourcePanel.java
 *
 * Created on April 25, 2002, 2:15 PM
 */

package org.jini.projects.athena.service.ui;

import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import org.jini.projects.athena.resources.CacheDetails;
import org.jini.projects.athena.resources.PoolDetails;
import org.jini.projects.athena.service.AthenaRegistration;

/**
 *
 * @author  calum
 */
public class ResourcePanel extends JPanel {
    AthenaRegistration athreg;
    HashMap currentDetails;
    DefaultComboBoxModel cacheLM;
    DefaultComboBoxModel poolLM;

    /** Creates new form ResourcePanel */
    public ResourcePanel() {
        initComponents();
    }

    public ResourcePanel(AthenaRegistration areg) {
        this();
        athreg = areg;
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new JPanel();
        mainPanel.setLayout(new java.awt.GridBagLayout());
        mainPanel.setFont(getFont().deriveFont(Font.PLAIN));
        comboPanel = new JPanel();
        jScrollPane1 = new JScrollPane();
        jcombo1 = new JComboBox();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jScrollPane2 = new JScrollPane();
        jcombo2 = new JComboBox();
        refreshButton = new JButton();
        cacheDetailsPanel = new JPanel();
        jLabel3 = new JLabel();
        nameLabel = new JLabel();
        classLabel = new JLabel();
        readsLabel = new JLabel();
        writesLabel = new JLabel();
        poolDetailsPanel = new JPanel();
        PoolDetailsLabel = new JLabel();
        pNameLabel = new JLabel();
        pClassLabel = new JLabel();
        pAvailableLabel = new JLabel();
        pLockedLabel = new JLabel();

        setLayout(new java.awt.BorderLayout());


        jcombo1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                jList2ValueChanged(e);
            }
        });

        comboPanel.setSize(300, 200);        
        comboPanel.setOpaque(true);
        comboPanel.setLayout(new GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;

        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 6);
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        comboPanel.add(jcombo1, gridBagConstraints);

        jLabel1.setText("Caches");
        jLabel1.setFont(getFont().deriveFont(Font.PLAIN));
        jLabel1.setHorizontalAlignment(JLabel.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;

        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 6);
        comboPanel.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Pools");
        jLabel2.setFont(getFont().deriveFont(Font.PLAIN));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 6);
        comboPanel.add(jLabel2, gridBagConstraints);

        jcombo2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                jList3ValueChanged(e);
            }
        });
        jcombo2.setFont(getFont().deriveFont(Font.PLAIN));
        jcombo1.setFont(getFont().deriveFont(Font.PLAIN));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;

        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;

        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 12, 6);
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        comboPanel.add(jcombo2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 12, 6);
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        mainPanel.add(comboPanel, gridBagConstraints);

        //Sub componenents

        refreshButton.setMnemonic('R');
        refreshButton.setText("Refresh");
        refreshButton.setFont(getFont().deriveFont(Font.PLAIN));
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 24);
        mainPanel.add(refreshButton, gridBagConstraints);

        cacheDetailsPanel.setLayout(new java.awt.GridLayout(7, 1, 0, 2));

        cacheDetailsPanel.setBorder(new javax.swing.border.EtchedBorder());
        jLabel3.setFont(new java.awt.Font("Dialog", Font.PLAIN, 10));
        jLabel3.setText("Cache Details:");
        cacheDetailsPanel.add(jLabel3);

        nameLabel.setText("Name:");
        cacheDetailsPanel.add(nameLabel);
        nameLabel.setFont(getFont().deriveFont(Font.PLAIN));
        classLabel.setText("Class");
        cacheDetailsPanel.add(classLabel);
        classLabel.setFont(getFont().deriveFont(Font.PLAIN));
        readsLabel.setText("Reads:");
        cacheDetailsPanel.add(readsLabel);
        readsLabel.setFont(getFont().deriveFont(Font.PLAIN));
        writesLabel.setText("Writes:");
        writesLabel.setFont(getFont().deriveFont(Font.PLAIN));
        cacheDetailsPanel.add(writesLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 1;
        gridBagConstraints.ipadx = 400;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        mainPanel.add(cacheDetailsPanel, gridBagConstraints);

        poolDetailsPanel.setLayout(new java.awt.GridLayout(7, 1, 0, 2));

        poolDetailsPanel.setBorder(new javax.swing.border.EtchedBorder());
        PoolDetailsLabel.setFont(new java.awt.Font("Dialog", Font.PLAIN, 10));
        PoolDetailsLabel.setText("Pool Details");
        poolDetailsPanel.add(PoolDetailsLabel);

        pNameLabel.setText("Name:");
        pNameLabel.setFont(getFont().deriveFont(Font.PLAIN));
        poolDetailsPanel.add(pNameLabel);

        pClassLabel.setText("Class:");
        pClassLabel.setFont(getFont().deriveFont(Font.PLAIN));
        poolDetailsPanel.add(pClassLabel);

        pAvailableLabel.setText("Available:");
        pAvailableLabel.setFont(getFont().deriveFont(Font.PLAIN));
        poolDetailsPanel.add(pAvailableLabel);

        pLockedLabel.setText("Locked:");
        pLockedLabel.setFont(getFont().deriveFont(Font.PLAIN));
        poolDetailsPanel.add(pLockedLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 1;
        gridBagConstraints.ipadx = 400;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        mainPanel.add(poolDetailsPanel, gridBagConstraints);

        add(mainPanel, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

    private void jList3ValueChanged(ActionEvent evt) {//GEN-FIRST:event_jList3ValueChanged
        // Add your handling code here:
        String item = (String) poolLM.getSelectedItem();
        PoolDetails[] dets = (PoolDetails[]) currentDetails.get("Pool");
        for (int i = 0; i < dets.length; i++) {
            if (dets[i].getAlias().equals(item)) {
                PoolDetails det = dets[i];
                pNameLabel.setText("Name: " + det.getAlias());
                pClassLabel.setText("Class: " + det.getClass());
                pAvailableLabel.setText("Available: " + det.getAvailable());
                pLockedLabel.setText("Locked: " + det.getLocked());
            }
        }

    }//GEN-LAST:event_jList3ValueChanged

    private void jList2ValueChanged(ActionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
        // Add your handling code here:
        String item = (String) cacheLM.getSelectedItem();
        CacheDetails[] dets = (CacheDetails[]) currentDetails.get("Cache");
        for (int i = 0; i < dets.length; i++) {
            if (dets[i].getAlias().equals(item)) {
                CacheDetails det = dets[i];
                nameLabel.setText("Name: " + det.getAlias());
                classLabel.setText("Class: " + det.getClass());
                readsLabel.setText("Reads: " + det.getReadActivity());
                writesLabel.setText("Writes: " + det.getWriteActivity());
            }
        }

    }//GEN-LAST:event_jList2ValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Add your handling code here:
        try {
            currentDetails = athreg.getResourceDetails();
            cacheLM = new DefaultComboBoxModel();
            CacheDetails[] cdetails = (CacheDetails[]) currentDetails.get("Cache");
            for (int i = 0; i < cdetails.length; i++) {
               
                cacheLM.addElement(cdetails[i].getAlias());
            }
            poolLM = new DefaultComboBoxModel();
            PoolDetails[] pdetails = (PoolDetails[]) currentDetails.get("Pool");
            for (int i = 0; i < pdetails.length; i++) {
                poolLM.addElement(pdetails[i].getAlias());
                
            }
            jcombo1.setModel(cacheLM);
            jcombo2.setModel(poolLM);
        } catch (Exception ex) {
            System.out.println("An exception occured");
            System.out.println("Error is: " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel pAvailableLabel;
    private JLabel pLockedLabel;
    private JPanel poolDetailsPanel;
    private JPanel comboPanel;
    private JPanel cacheDetailsPanel;
    private JPanel mainPanel;
    private JButton refreshButton;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane1;
    private JLabel PoolDetailsLabel;
    private JLabel pClassLabel;
    private JLabel nameLabel;
    private JLabel writesLabel;
    private JLabel classLabel;
    private JLabel pNameLabel;
    private JLabel readsLabel;
    private JComboBox jcombo2;
    private JComboBox jcombo1;
    private JLabel jLabel3;
    private JLabel jLabel2;
    private JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        JFrame frame = new JFrame();
        frame.getContentPane().add(new ResourcePanel());
        frame.setSize(300, 200);
        frame.show();
        try {
            Thread.sleep(10000);
        } catch (Exception ex) {
        }
        System.exit(0);
    }
}
