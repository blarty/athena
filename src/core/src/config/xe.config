import net.jini.lookup.entry.*;
import net.jini.core.entry.*;

import org.jini.projects.athena.service.*;
import com.sun.jini.config.KeyStores;

import java.util.Collections;
import net.jini.jeri.ssl.*;
import net.jini.jeri.http.*;

import net.jini.jeri.tcp.*;
import net.jini.core.constraint.*;
import net.jini.constraint.*;
import java.security.Permission;
import javax.security.auth.login.LoginContext;
import org.jini.projects.athena.service.ServerPermission;
import net.jini.jeri.*;


org.jini.projects.athena {
	athenaName="XE";
	codebase = "http://localhost:8086/lib/athena-dl.jar";
	policy="config\policy.all";
	consoleLogLevel="FINEST";
	fileLogLevel="FINEST";
	groups=new String[]{"incaX"};
	ui="clean";
	thorName="thortest";
	thorBranch="Properties/Athena/XE";	
	loginContext =null;
		 /* JAAS login */
    /*loginContext = new LoginContext("org.jini.projects.athena");*/

        initialLookupAttributes = new Entry[] {new Name(name), new AthenaServiceType()};
	
	/* Public Key Certificates */
	
    /*
	private static users = KeyStores.getKeyStore("file:/home/calum/truststore.trust", null);
    
    private static server = KeyStores.getX500Principal("thor", users);
	
	private static serverUser = Collections.singleton(KeyStores.getX500Principal("thor", users));
	*/
	
	
	/* This is the secure service Exporter */
	
/*exporter =
	new BasicJeriExporter(
	    SslServerEndpoint.getInstance(0),
	    new ProxyTrustILFactory(
		new BasicMethodConstraints(
		    new InvocationConstraints(Integrity.YES, null)),
		ServerPermission.class)); */

	exporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(0), new BasicILFactory());
}
